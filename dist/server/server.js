"use strict";
/**
 * Created by laurence-ho on 21/07/17.
 */
var express = require("express");
var session = require("express-session");
var bodyParser = require("body-parser");
var path = require("path");
var passport = require("passport");
var expressSanitizer = require('express-sanitizer');
//initial database schema
var database = require('./database/db.service');
require('./database/db.schema')(database);
require('./passport')(passport);
var app = express();
app.use(bodyParser.urlencoded({ extended: false }));
app.use(bodyParser.json());
app.use('/app', express.static(path.resolve(__dirname, '../client/app')));
app.use('/libs', express.static(path.resolve(__dirname, '../client/libs')));
// for system.js to work. Can be removed if bundling.
app.use(express.static(path.resolve(__dirname, '../client')));
app.use(express.static(path.resolve(__dirname, '../../node_modules')));
app.use(expressSanitizer());
app.use(session({
    secret: 'mySecretKey',
    resave: true,
    saveUninitialized: true
}));
app.use(passport.initialize());
app.use(passport.session());
//initial routes
var userRoutes = require('./routes/user');
var maintenanceRoutes = require('./routes/maintenance');
var terminationRoutes = require('./routes/termination');
app.use('/api', userRoutes);
app.use('/api', maintenanceRoutes);
app.use('/api', terminationRoutes);
app.get('/', function (req, res) {
    res.sendFile(path.resolve(__dirname, '../client/index.html'));
});
app.get('*', function (req, res) {
    res.send('Sorry, page not found!');
});
app.listen(8080, function () {
    console.log('This express angular app is listening on port:' + 8080);
});
module.exports = app;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QUMsQ0FBQztBQUNwQyxDQUFDLENBQUMsQ0FBQztBQUVILEdBQUcsQ0FBQyxNQUFNLENBQUMsSUFBSSxFQUFFO0lBQ2hCLE9BQU8sQ0FBQyxHQUFHLENBQUMsZ0RBQWdELEdBQUcsSUFBSSxDQUFDLENBQUM7QUFDdEUsQ0FBQyxDQUFDLENBQUM7QUFFSCxpQkFBUyxHQUFHLENBQUMiLCJmaWxlIjoic2VydmVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENyZWF0ZWQgYnkgbGF1cmVuY2UtaG8gb24gMjEvMDcvMTcuXHJcbiAqL1xyXG5cclxuaW1wb3J0IGV4cHJlc3MgPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmltcG9ydCBzZXNzaW9uID0gcmVxdWlyZSgnZXhwcmVzcy1zZXNzaW9uJyk7XHJcbmltcG9ydCBib2R5UGFyc2VyID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcclxuaW1wb3J0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XHJcbmltcG9ydCBwYXNzcG9ydCA9IHJlcXVpcmUoJ3Bhc3Nwb3J0Jyk7XHJcbmNvbnN0IGV4cHJlc3NTYW5pdGl6ZXIgPSByZXF1aXJlKCdleHByZXNzLXNhbml0aXplcicpO1xyXG5cclxuLy9pbml0aWFsIGRhdGFiYXNlIHNjaGVtYVxyXG5jb25zdCBkYXRhYmFzZSA9IHJlcXVpcmUoJy4vZGF0YWJhc2UvZGIuc2VydmljZScpO1xyXG5yZXF1aXJlKCcuL2RhdGFiYXNlL2RiLnNjaGVtYScpKGRhdGFiYXNlKTtcclxuXHJcbnJlcXVpcmUoJy4vcGFzc3BvcnQnKShwYXNzcG9ydCk7XHJcblxyXG5jb25zdCBhcHAgPSBleHByZXNzKCk7XHJcblxyXG5hcHAudXNlKGJvZHlQYXJzZXIudXJsZW5jb2RlZCh7ZXh0ZW5kZWQ6IGZhbHNlfSkpO1xyXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcclxuXHJcbmFwcC51c2UoJy9hcHAnLCBleHByZXNzLnN0YXRpYyhwYXRoLnJlc29sdmUoX19kaXJuYW1lLCAnLi4vY2xpZW50L2FwcCcpKSk7XHJcbmFwcC51c2UoJy9saWJzJywgZXhwcmVzcy5zdGF0aWMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL2NsaWVudC9saWJzJykpKTtcclxuXHJcbi8vIGZvciBzeXN0ZW0uanMgdG8gd29yay4gQ2FuIGJlIHJlbW92ZWQgaWYgYnVuZGxpbmcuXHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL2NsaWVudCcpKSk7XHJcbmFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uLy4uL25vZGVfbW9kdWxlcycpKSk7XHJcblxyXG5hcHAudXNlKGV4cHJlc3NTYW5pdGl6ZXIoKSk7XHJcblxyXG5hcHAudXNlKHNlc3Npb24oe1xyXG5cdHNlY3JldDogJ215U2VjcmV0S2V5JyxcclxuXHRyZXNhdmU6IHRydWUsXHJcblx0c2F2ZVVuaW5pdGlhbGl6ZWQ6IHRydWVcclxufSkpO1xyXG5hcHAudXNlKHBhc3Nwb3J0LmluaXRpYWxpemUoKSk7XHJcbmFwcC51c2UocGFzc3BvcnQuc2Vzc2lvbigpKTtcclxuXHJcbi8vaW5pdGlhbCByb3V0ZXNcclxuY29uc3QgdXNlclJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL3VzZXInKTtcclxuY29uc3QgbWFpbnRlbmFuY2VSb3V0ZXMgPSByZXF1aXJlKCcuL3JvdXRlcy9tYWludGVuYW5jZScpO1xyXG5jb25zdCB0ZXJtaW5hdGlvblJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL3Rlcm1pbmF0aW9uJyk7XHJcbmFwcC51c2UoJy9hcGknLCB1c2VyUm91dGVzKTtcclxuYXBwLnVzZSgnL2FwaScsIG1haW50ZW5hbmNlUm91dGVzKTtcclxuYXBwLnVzZSgnL2FwaScsIHRlcm1pbmF0aW9uUm91dGVzKTtcclxuYXBwLmdldCgnLycsIChyZXE6IGFueSwgcmVzOiBhbnkpID0+IHtcclxuXHRyZXMuc2VuZEZpbGUocGF0aC5yZXNvbHZlKF9fZGlybmFtZSwgJy4uL2NsaWVudC9pbmRleC5odG1sJykpO1xyXG59KTtcclxuXHJcbmFwcC5nZXQoJyonLCAocmVxOiBhbnksIHJlczogYW55KSA9PiB7XHJcblx0cmVzLnNlbmQoJ1NvcnJ5LCBwYWdlIG5vdCBmb3VuZCEnKTtcclxufSk7XHJcblxyXG5hcHAubGlzdGVuKDgwODAsICgpID0+IHtcclxuXHRjb25zb2xlLmxvZygnVGhpcyBleHByZXNzIGFuZ3VsYXIgYXBwIGlzIGxpc3RlbmluZyBvbiBwb3J0OicgKyA4MDgwKTtcclxufSk7XHJcblxyXG5leHBvcnQgPSBhcHA7Il19
