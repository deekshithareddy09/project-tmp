"use strict";
/**
 * Created by laurence-ho on 21/07/17.
 */
var db = require('./database/db.service');
var config = require('./config');
var authentication = {};
authentication.checkAdmin = function (req, res, next) {
    if (req.isAuthenticated()) {
        db.getConnection(function (err, connection) {
            if (err) {
                res.status(500).send({ message: err });
            }
            else {
                connection.query('SELECT * FROM ' + config.db_tables.USERS + ' WHERE username = ?', [req.params.username], function (err, rows) {
                    connection.release();
                    if (err) {
                        res.status(500).send({ message: err });
                    }
                    else {
                        if (rows[0].level >= 11) {
                            next();
                        }
                        else {
                            res.status(403).send({ message: 'You have no permission' });
                        }
                    }
                });
            }
        });
    }
    else {
        res.status(403).send({ message: 'Please Login First' });
    }
};
authentication.checkManager = function (req, res, next) {
    if (req.isAuthenticated()) {
        db.getConnection(function (err, connection) {
            if (err) {
                res.status(500).send({ message: err });
            }
            else {
                connection.query('SELECT * FROM ' + config.db_tables.USERS + ' WHERE username = ?', [req.params.username], function (err, rows) {
                    connection.release();
                    if (err) {
                        res.status(500).send({ message: err });
                    }
                    else {
                        if (rows[0].level >= 5) {
                            next();
                        }
                        else {
                            res.status(403).send({ message: 'You have no permission' });
                        }
                    }
                });
            }
        });
    }
    else {
        res.status(403).send({ message: 'Please Login First' });
    }
};
authentication.isLoggedIn = function (req, res, next) {
    if (req.isAuthenticated()) {
        return next();
    }
    res.status(403).send({ message: 'Please Login First' });
};
module.exports = authentication;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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biAqIENyZWF0ZWQgYnkgbGF1cmVuY2UtaG8gb24gMjEvMDcvMTcuXHJcbiAqL1xyXG5cclxuY29uc3QgZGIgPSByZXF1aXJlKCcuL2RhdGFiYXNlL2RiLnNlcnZpY2UnKTtcclxubGV0IGNvbmZpZyA9IHJlcXVpcmUoJy4vY29uZmlnJyk7XHJcbmxldCBhdXRoZW50aWNhdGlvbjogYW55ID0ge307XHJcblxyXG5hdXRoZW50aWNhdGlvbi5jaGVja0FkbWluID0gKHJlcTogYW55LCByZXM6IGFueSwgbmV4dDogYW55KSA9PiB7XHJcblx0aWYgKHJlcS5pc0F1dGhlbnRpY2F0ZWQoKSkge1xyXG5cdFx0ZGIuZ2V0Q29ubmVjdGlvbigoZXJyOiBhbnksIGNvbm5lY3Rpb246IGFueSkgPT4ge1xyXG5cdFx0XHRpZiAoZXJyKSB7XHJcblx0XHRcdFx0cmVzLnN0YXR1cyg1MDApLnNlbmQoe21lc3NhZ2U6IGVycn0pO1xyXG5cdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdGNvbm5lY3Rpb24ucXVlcnkoJ1NFTEVDVCAqIEZST00gJytjb25maWcuZGJfdGFibGVzLlVTRVJTKycgV0hFUkUgdXNlcm5hbWUgPSA/JywgW3JlcS5wYXJhbXMudXNlcm5hbWVdLCAoZXJyOiBhbnksIHJvd3M6IGFueSkgPT4ge1xyXG5cdFx0XHRcdFx0Y29ubmVjdGlvbi5yZWxlYXNlKCk7XHJcblxyXG5cdFx0XHRcdFx0aWYgKGVycikge1xyXG5cdFx0XHRcdFx0XHRyZXMuc3RhdHVzKDUwMCkuc2VuZCh7bWVzc2FnZTogZXJyfSk7XHJcblx0XHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRpZiAocm93c1swXS5sZXZlbCA+PSAxMSkge1xyXG5cdFx0XHRcdFx0XHRcdG5leHQoKTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRyZXMuc3RhdHVzKDQwMykuc2VuZCh7bWVzc2FnZTogJ1lvdSBoYXZlIG5vIHBlcm1pc3Npb24nfSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fSBlbHNlIHtcclxuXHRcdHJlcy5zdGF0dXMoNDAzKS5zZW5kKHttZXNzYWdlOiAnUGxlYXNlIExvZ2luIEZpcnN0J30pO1xyXG5cdH1cclxufTtcclxuXHJcbmF1dGhlbnRpY2F0aW9uLmNoZWNrTWFuYWdlciA9IChyZXE6IGFueSwgcmVzOiBhbnksIG5leHQ6IGFueSkgPT4ge1xyXG5cdGlmIChyZXEuaXNBdXRoZW50aWNhdGVkKCkpIHtcclxuXHRcdGRiLmdldENvbm5lY3Rpb24oKGVycjogYW55LCBjb25uZWN0aW9uOiBhbnkpID0+IHtcclxuXHRcdFx0aWYgKGVycikge1xyXG5cdFx0XHRcdHJlcy5zdGF0dXMoNTAwKS5zZW5kKHttZXNzYWdlOiBlcnJ9KTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRjb25uZWN0aW9uLnF1ZXJ5KCdTRUxFQ1QgKiBGUk9NICcrY29uZmlnLmRiX3RhYmxlcy5VU0VSUysnIFdIRVJFIHVzZXJuYW1lID0gPycsIFtyZXEucGFyYW1zLnVzZXJuYW1lXSwgKGVycjogYW55LCByb3dzOiBhbnkpID0+IHtcclxuXHRcdFx0XHRcdGNvbm5lY3Rpb24ucmVsZWFzZSgpO1xyXG5cclxuXHRcdFx0XHRcdGlmIChlcnIpIHtcclxuXHRcdFx0XHRcdFx0cmVzLnN0YXR1cyg1MDApLnNlbmQoe21lc3NhZ2U6IGVycn0pO1xyXG5cdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0aWYgKHJvd3NbMF0ubGV2ZWwgPj0gNSkge1xyXG5cdFx0XHRcdFx0XHRcdG5leHQoKTtcclxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRcdFx0XHRyZXMuc3RhdHVzKDQwMykuc2VuZCh7bWVzc2FnZTogJ1lvdSBoYXZlIG5vIHBlcm1pc3Npb24nfSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9KTtcclxuXHRcdFx0fVxyXG5cdFx0fSk7XHJcblx0fSBlbHNlIHtcclxuXHRcdHJlcy5zdGF0dXMoNDAzKS5zZW5kKHttZXNzYWdlOiAnUGxlYXNlIExvZ2luIEZpcnN0J30pO1xyXG5cdH1cclxufTtcclxuXHJcbmF1dGhlbnRpY2F0aW9uLmlzTG9nZ2VkSW4gPSAocmVxOiBhbnksIHJlczogYW55LCBuZXh0OiBhbnkpID0+IHtcclxuXHRpZiAocmVxLmlzQXV0aGVudGljYXRlZCgpKSB7XHJcblx0XHRyZXR1cm4gbmV4dCgpO1xyXG5cdH1cclxuXHRyZXMuc3RhdHVzKDQwMykuc2VuZCh7bWVzc2FnZTogJ1BsZWFzZSBMb2dpbiBGaXJzdCd9KTtcclxufTtcclxuXHJcbmV4cG9ydCA9IGF1dGhlbnRpY2F0aW9uO1xyXG5cclxuIl19
